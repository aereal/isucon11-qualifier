#
# copied from https://github.com/kamipo/isucon4anchoco/blob/master/etc/nginx.conf
#

#[program:nginx]
#directory = /home/isucon/nginx
#command=/home/isucon/nginx/sbin/nginx -c /home/isucon/nginx/conf/nginx.conf
#user=root
#stdout_logfile=/home/isucon/nginx/logs/error.log
#stderr_logfile=/home/isucon/nginx/logs/error.log
#autostart = true

user www-data;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

worker_processes 1;
worker_rlimit_nofile 65535;

error_log /tmp/nginx.error.log info;
#pcre_jit on;

events {
    worker_connections 16384;
    multi_accept on;
    use epoll;
    accept_mutex_delay 100ms;
}

http {
    include /etc/nginx/mime.types;

    log_format ltsv "time:$time_local"
                    "\thost:$remote_addr"
                    "\tforwardedfor:$http_x_forwarded_for"
                    "\treq:$request"
                    "\tstatus:$status"
                    "\tmethod:$request_method"
                    "\turi:$request_uri"
                    "\tsize:$body_bytes_sent"
                    "\treferer:$http_referer"
                    "\tua:$http_user_agent"
                    "\treqtime:$request_time"
                    "\tcache:$upstream_http_x_cache"
                    "\truntime:$upstream_http_x_runtime"
                    "\tapptime:$upstream_response_time"
                    "\tvhost:$host";

    log_format netdata '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '$request_length $request_time $upstream_response_time '
                       '"$http_referer" "$http_user_agent"';

    access_log /var/log/nginx/netdata.log netdata;
    access_log /tmp/nginx.access.log ltsv;
    # access_log off;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    server_tokens       off;
    keepalive_timeout   120;
    #keepalive_requests  10000;
    types_hash_max_size 2048;
    client_max_body_size 10m;

    default_type        application/octet-stream;

    #client_max_body_size 20M;
    #client_body_buffer_size 128k;
    #send_timeout  15;
    #reset_timedout_connection  on;

    gzip on;
    gzip_proxied off;
    gzip_static on;
    gzip_vary on;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    proxy_temp_path  /dev/shm/nginx;
    proxy_buffering on;
    proxy_set_header Host $http_host;

    proxy_cache_path /var/lib/nginx/cache/isu10q levels=1:2 keys_zone=isucon10q:64m inactive=1s max_size=1g;

    # TLS configuration
    # ssl_protocols TLSv1.2;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # include conf.d/*.conf;
    # include sites-enabled/*.conf;

    upstream backend {
        # server $IP:5000 weight=1;
        # server unix:/path/to/unix.sock weight=1;
        server 127.0.0.1:1323;
        keepalive 64;
    }

    map $http_user_agent $is_bot {
        default 0;
        "~ISUCONbot(-Mobile)?" 1;
        "~ISUCONbot-Image/" 1;
        "~Mediapartners-ISUCON" 1;
        "~ISUCONCoffee" 1;
        "~ISUCONFeedSeeker(Beta)?" 1;
        "~crawler \(https://isucon\.invalid/(support/faq/|help/jp/)" 1;
        "~isubot" 1;
        "~Isupider" 1;
        "~Isupider(-image)?\+" 1;
        "~*(bot|crawler|spider)(?:[-_ .\/;@()]|$)" 1;
    }

    server {
        root /home/isucon/isucon10-qualify/webapp/public;
        listen 80 default_server;
        listen [::]:80 default_server;

        location = /stub_status {
            stub_status;
            allow 127.0.0.1;
            deny all;
            access_log off;
        }

        location /api {
            # proxy_cache isucon10q;
            # proxy_cache_valid 200 1s;
            # proxy_cache_key "$scheme://$host$request_uri$cookie_user_id";

            # set $no_cache 0;
            # if ($cookie_user_id = '') {
            #   set $no_cache 1;
            # }
            # proxy_cache_bypass $no_cache;
            # proxy_no_cache     $no_cache;

            if ($is_bot = 1) {
                return 503;
            }

            proxy_set_header Host $http_host;
            proxy_pass http://backend;
        }

        location /initialize {
            proxy_pass http://backend;
        }

        location / {
            if ($is_bot = 1) {
                return 503;
            }

            root /www/data;
        }
    }
}
